// Code generated by mockery v2.16.0. DO NOT EDIT.

package utils

import mock "github.com/stretchr/testify/mock"

// MockUtilsInterface is an autogenerated mock type for the UtilsInterface type
type MockUtilsInterface struct {
	mock.Mock
}

type MockUtilsInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUtilsInterface) EXPECT() *MockUtilsInterface_Expecter {
	return &MockUtilsInterface_Expecter{mock: &_m.Mock}
}

// DoRequest provides a mock function with given fields: url, httpMethod, path, data
func (_m *MockUtilsInterface) DoRequest(url string, httpMethod string, path string, data interface{}) ([]byte, error) {
	ret := _m.Called(url, httpMethod, path, data)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string, string, string, interface{}) []byte); ok {
		r0 = rf(url, httpMethod, path, data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string, interface{}) error); ok {
		r1 = rf(url, httpMethod, path, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockUtilsInterface_DoRequest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoRequest'
type MockUtilsInterface_DoRequest_Call struct {
	*mock.Call
}

// DoRequest is a helper method to define mock.On call
//   - url string
//   - httpMethod string
//   - path string
//   - data interface{}
func (_e *MockUtilsInterface_Expecter) DoRequest(url interface{}, httpMethod interface{}, path interface{}, data interface{}) *MockUtilsInterface_DoRequest_Call {
	return &MockUtilsInterface_DoRequest_Call{Call: _e.mock.On("DoRequest", url, httpMethod, path, data)}
}

func (_c *MockUtilsInterface_DoRequest_Call) Run(run func(url string, httpMethod string, path string, data interface{})) *MockUtilsInterface_DoRequest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(string), args[3].(interface{}))
	})
	return _c
}

func (_c *MockUtilsInterface_DoRequest_Call) Return(_a0 []byte, _a1 error) *MockUtilsInterface_DoRequest_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewMockUtilsInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockUtilsInterface creates a new instance of MockUtilsInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockUtilsInterface(t mockConstructorTestingTNewMockUtilsInterface) *MockUtilsInterface {
	mock := &MockUtilsInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
